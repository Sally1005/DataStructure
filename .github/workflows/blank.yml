name: Junit

# on用来控制何时运行这个workflow
on:
  # 在push时触发这个事件workflow
  push:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: ${{secrets.DB_DATABASE}}
      DB_USER: ${{secrets.DB_USER}}
      MYSQL_ROOT_PASSWORD: ${{secrets.DB_PASSWORD}}
    steps:
        - name: Build Maven
          uses: actions/cache@v1
          with:
             path: ~/.m2/repository
             key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
             restore-keys: |
              ${{ runner.os }}-maven-
        - uses: actions/checkout@v2
        - name: Set timezone to Shanghai
          run: |
            sudo rm /etc/localtime
            sudo ln -s /usr/share/zoneinfo/Asia/Shanghai/etc/localtime

        # Start Mysql
        # https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
        - name: Start Mysql
          run: |
           sudo /etc/init.d/mysql start
           mysql -e "use mysql; FLUSH PRIVILEGES; ALTER USER '${{ secrets.DB_USER }}'@'%' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';" -uroot -proot
           mysql -e 'CREATE DATABASE tree;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
           # alter user '${{env.DB_USER}}'@'%' identified with mysql_native_password by '${{env.DB_PASSWORD}}';
           #  CREATE DATABASE `tree` CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
           # grant all privileges on tree.* to ${{env.DB_USER}}@'%';
           # flush privileges;
            mysql -uroot -p"root" tree < /assets/database/fruit.sql
           # mysql -u${{env.DB_USER}} -p${{env.DB_PASSWORD}}
           # mysql -e 'CREATE DATABASE `${{env.DB_DATABASE}}`;' -u${{env.DB_USER}} -p${{env.DB_PASSWORD}}
           # mysql -e 'SHOW DATABASES;' -u${{env.DB_USER}} -p${{env.DB_PASSWORD}}

        # Set up JDK 1.8
        - name: Set up JDK 1.8
          uses: actions/setup-java@v1
          with:
            java-version: 1.8

       # 使用Github Action市场提供的Junit流程来执行单元测试，并且输出报告
        - uses: ashley-taylor/junit-report-annotations-action@master
          with:
            access-token: ${{ secrets.GITHUB_TOKEN }}
          if: always()
          


