name: Junit

# on用来控制何时运行这个workflow
on:
  # 在push时触发这个事件workflow
  push:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: ${{secrets.DB_DATABASE}}
      DB_USER: ${{secrets.DB_USER}}
      MYSQL_ROOT_PASSWORD: ${{secrets.DB_PASSWORD}}      
  steps:
  - uses: actions/checkout@v3
  - name: Set up JDK 11
    uses: actions/setup-java@v3
    with:
      java-version: '17'
      distribution: 'temurin'
      cache: maven
  - name: Build with Maven
    run: mvn --batch-mode --update-snapshots verify
  - name: Set timezone to Shanghai
    run: |
          sudo rm /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Shanghai/etc/localtime
            
        # Start Mysql
        # https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
  - name: Start Mysql
    run: |
           sudo /etc/init.d/mysql start
       
            mysql -uroot -proot -e "create user 'Tom'@'localhost' identified by 'root';grant all privileges on tree.fruit to 'Tom'@'localhost';FLUSH PRIVILEGES; ALTER USER 'Tom'@'localhost' IDENTIFIED BY 'root';create database tree;" 
            mysql -uroot -proot -Dtree -e "DROP TABLE IF EXISTS fruit;CREATE TABLE fruit (
                id INT(11) NOT NULL AUTO_INCREMENT,
                data varchar(20) DEFAULT NULL COMMENT '当前节点',
                is_left INT(11)  DEFAULT 1 COMMENT '左子节点',
                level INT(11)  DEFAULT NULL COMMENT '当前节点层级',
                parent_id INT(11)  DEFAULT NULL COMMENT '父节点id',
                PRIMARY KEY (id)
                ) COMMENT '水果表' CHARSET utf8mb4;
                INSERT INTO fruit VALUES (1, '水果', 0, 1, 0);
               INSERT INTO fruit VALUES (2, '柑橘类', 1, 2, 1);
               INSERT INTO fruit VALUES (3, '瓜果类', 0, 2, 1);
               INSERT INTO fruit VALUES (4, '橙子', 1, 3, 2);
               INSERT INTO fruit VALUES (5, '沃柑', 0, 3, 2);
               INSERT INTO fruit VALUES (6, '西瓜', 1, 3, 3);
               INSERT INTO fruit VALUES (7, '哈密瓜', 0, 3, 3);
                "    
     
  - name: Run Unit Tests
    run: mvn test -B -e -X 
          
       # 使用Github Action市场提供的Junit流程来执行单元测试，并且输出报告
  - uses: ashley-taylor/junit-report-annotations-action@master
    with:
            access-token: ${{ secrets.GITHUB_TOKEN }}
    if: always()



