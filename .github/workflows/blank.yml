name: Junit

# on用来控制何时运行这个workflow
on:
  # 在push时触发这个事件workflow
  push:
    branches: [ main ]
    pull_request:
      branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
     mysql-service:
      image: mysql:latest
      env:
        DB_DATABASE: ${{secrets.DB_DATABASE}}
        DB_USER: ${{secrets.DB_USER}}
        DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      ports:
        - 3306:3306
      options: >-
        --health-cmd="mysqladmin ping"
        --health-interval=100s
        --health-timeout=50s
        --health-retries=30s

    steps:
        - name: Build Maven
          uses: actions/cache@v1
          with:
             path: ~/.m2/repository
             key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
             restore-keys: |
              ${{ runner.os }}-maven-
        - uses: actions/checkout@v2
        - name: Set timezone to Shanghai
          run: |
            sudo rm /etc/localtime
            sudo ln -s /usr/share/zoneinfo/Asia/Shanghai/etc/localtime

        # Start Mysql
        # https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
        - name: Start Mysql
          run: |
            sudo systemctl start mysql
            mysql -e "use mysql; FLUSH PRIVILEGES; ALTER USER '${{ secrets.DB_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';"
            mysql -e 'CREATE DATABASE tree;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

        # Set up JDK 1.8
        - name: Set up JDK 1.8
          uses: actions/setup-java@v1
          with:
            java-version: 1.8

       # 使用Github Action市场提供的Junit流程来执行单元测试，并且输出报告
        - uses: ashley-taylor/junit-report-annotations-action@master
          with:
            access-token: ${{ secrets.GITHUB_TOKEN }}
          if: always()



