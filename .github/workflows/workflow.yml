name: Junit

on:
  push:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DB_DATABASE: ${{secrets.DB_DATABASE}}
      DB_USER: ${{secrets.DB_USER}}
      MYSQL_ROOT_PASSWORD: ${{secrets.DB_PASSWORD}}
      JAVA_HOME_17_X64: 'C:\hostedtoolcache\windows\Java_Microsoft_jdk\17.0.3\x64'
         
    steps:
        - name: check out code
          uses: actions/checkout@v3
        
        - name: Cache local Maven repository
          id: cache-maven
          uses: actions/cache@v3
          with:
             path: ~/.m2/repository
             key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
             restore-keys: |
              ${{ runner.os }}-maven-
              
        - name: Cache JDK
          id: cache-jdk
          uses: actions/cache@v3
          with:
            path: ${{ env.JAVA_HOME_17_X64 }}
            key: ${{ runner.os }}-jdk-17
            restore-keys: ${{ runner.os }}-jdk-
        - name: Install Java
          if: ${{ steps.cache-jdk.outputs.cache-hit != 'true' }}
          uses: actions/setup-java@v3
          with:
            distribution: 'microsoft'
            java-version: '17'
        - name: Check default Java version
          run: java -version
        
        - name: Set installed/cached Java path [${{ env.JAVA_HOME_17_X64 }}]
          run: echo "${{ env.JAVA_HOME_17_X64 }}\bin" 
       
        - name: Check installed/cached Java version
          run: java -version
              
       
           
         # uses: actions/setup-java@v1
         # with:
         #   java-version: 1.8
         # run: |
          #  java -version
           # pwd
            
        - name: Set timezone to Shanghai
          run: |
            sudo rm /etc/localtime
            sudo ln -s /usr/share/zoneinfo/Asia/Shanghai/etc/localtime
            
        # https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
        - name: Start Mysql
          run: |
           sudo /etc/init.d/mysql start
           
            mysql -uroot -proot -e "create user 'Tom'@'localhost' identified by 'root';
              grant all privileges on tree.fruit to 'Tom'@'localhost';
              flush privileges;
              alter user 'Tom'@'localhost' identified by 'root';
              create database tree;" 
            mysql -uroot -proot -Dtree -e "DROP TABLE IF EXISTS fruit;
            
              CREATE TABLE fruit (
                id INT(11) NOT NULL AUTO_INCREMENT,
                data varchar(20) DEFAULT NULL COMMENT '当前节点',
                is_left INT(11)  DEFAULT 1 COMMENT '左子节点',
                level INT(11)  DEFAULT NULL COMMENT '当前节点层级',
                parent_id INT(11)  DEFAULT NULL COMMENT '父节点id',
                PRIMARY KEY (id)
                ) COMMENT '水果表' CHARSET utf8mb4;
        
               INSERT INTO fruit VALUES (1, '水果', 0, 1, 0);
               INSERT INTO fruit VALUES (2, '柑橘类', 1, 2, 1);
               INSERT INTO fruit VALUES (3, '瓜果类', 0, 2, 1);
               INSERT INTO fruit VALUES (4, '橙子', 1, 3, 2);
               INSERT INTO fruit VALUES (5, '沃柑', 0, 3, 2);
               INSERT INTO fruit VALUES (6, '西瓜', 1, 3, 3);
               INSERT INTO fruit VALUES (7, '哈密瓜', 0, 3, 3);
                "
      
        - name: Run Unit Tests
          run:  mvn -B test --file pom.xml
          
       # 使用Github Action市场提供的Junit流程来执行单元测试，并且输出报告
        - uses: ashley-taylor/junit-report-annotations-action@master
          with:
            access-token: ${{ secrets.GITHUB_TOKEN }}
          if: always()
          
       # 安装插件codecov
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v3
          with:
          # ci出现bug，是否继续跑
            fall_ci_if_error: true



