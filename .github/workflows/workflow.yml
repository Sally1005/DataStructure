name: Junit

on:
  push:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DB_DATABASE: ${{secrets.DB_DATABASE}}
      DB_USER: ${{secrets.DB_USER}}
      MYSQL_ROOT_PASSWORD: ${{secrets.DB_PASSWORD}}
      JAVA_HOME_17_X64: 'C:\hostedtoolcache\windows\Java_Microsoft_jdk\17.0.3\x64'
         
    steps:
        - name: check out code
          uses: actions/checkout@v3
        
        - name: Cache local Maven repository
          id: cache-maven
          uses: actions/cache@v3
          with:
             path: ~/.m2/repository
             key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
             restore-keys: |
              ${{ runner.os }}-maven-
              
        - name: Cache JDK
          id: cache-jdk
          uses: actions/cache@v3
          with:
            path: ${{ env.JAVA_HOME_17_X64 }}
            key: ${{ runner.os }}-jdk-17
            restore-keys: ${{ runner.os }}-jdk-
            
        - name: Install Java
          if: ${{ steps.cache-jdk.outputs.cache-hit != 'true' }}
          uses: actions/setup-java@v3
          with:
            distribution: 'microsoft'
            java-version: '17'
            
        - name: Check default Java version
          run: java -version
        
        - name: Set installed/cached Java path [${{ env.JAVA_HOME_17_X64 }}]
          run: echo "${{ env.JAVA_HOME_17_X64 }}\bin" 
       
        - name: Check installed/cached Java version
          run: java -version
            
        - name: Set timezone to Shanghai
          run: |
            sudo rm /etc/localtime
            sudo ln -s /usr/share/zoneinfo/Asia/Shanghai/etc/localtime
        
        - name: Build the Docker image
          run: docker-compose build
          
        - name: up mysql and apache container runs
          run: |
            docker-compose up -d     
 
       # - name: buffering time for db container
        #  uses: jakejarvis/wait-action@master
         # with:
          # time: '30s'

       #tree is the name of database
        - name: load database
          run:  |
             docker exec -i mysql mysql -uroot  -proot  tree< ${{github.workspace}} assets/database/fruit.sql
      
       # 使用Github Action市场提供的Junit流程来执行单元测试，并且输出报告
        - uses: ashley-taylor/junit-report-annotations-action@master
          with:
            access-token: ${{ secrets.GITHUB_TOKEN }}
          if: always()
          
       # 安装插件codecov
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v3
          with:
          # ci出现bug，是否继续跑
            fall_ci_if_error: true



