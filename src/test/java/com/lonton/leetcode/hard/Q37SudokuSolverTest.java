package com.lonton.leetcode.hard;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

/**
 * 37. 测试解数独<p>
 * <br>
 * 输入：board = {<br>
 * {'5', '3', '.', '.', '7', '.', '.', '.', '.'},<br>
 * {'6', '.', '.', '1', '9', '5', '.', '.', '.'},<br>
 * {'.', '9', '8', '.', '.', '.', '.', '6', '.'},<br>
 * {'8', '.', '.', '.', '6', '.', '.', '.', '3'},<br>
 * {'4', '.', '.', '8', '.', '3', '.', '.', '1'},<br>
 * {'7', '.', '.', '.', '2', '.', '.', '.', '6'},<br>
 * {'.', '6', '.', '.', '.', '.', '2', '8', '.'},<br>
 * {'.', '.', '.', '4', '1', '9', '.', '.', '5'},<br>
 * {'.', '.', '.', '.', '8', '.', '.', '7', '9'}<br>
 * } <br>
 * <p>
 * 输出：expected = {<br>
 * {'5', '3', '4', '6', '7', '8', '9', '1', '2'},<br>
 * {'6', '7', '2', '1', '9', '5', '3', '4', '8'},<br>
 * {'1', '9', '8', '3', '4', '2', '5', '6', '7'},<br>
 * {'8', '5', '9', '7', '6', '1', '4', '2', '3'},<br>
 * {'4', '2', '6', '8', '5', '3', '7', '9', '1'},<br>
 * {'7', '1', '3', '9', '2', '4', '8', '5', '6'},<br>
 * {'9', '6', '1', '5', '3', '7', '2', '8', '4'},<br>
 * {'2', '8', '7', '4', '1', '9', '6', '3', '5'},<br>
 * {'3', '4', '5', '2', '8', '6', '1', '7', '9'}<br>
 * <p>
 * } <br>
 *
 * @author 张利红
 */

public class Q37SudokuSolverTest {

    @Test
    public void testSolveSudoku() {
        Q37SudokuSolver solver = new Q37SudokuSolver();

        char[][] board = {
                {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
                {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
        };

        solver.solveSudoku(board);

        char[][] expected = {
                {'5', '3', '4', '6', '7', '8', '9', '1', '2'},
                {'6', '7', '2', '1', '9', '5', '3', '4', '8'},
                {'1', '9', '8', '3', '4', '2', '5', '6', '7'},
                {'8', '5', '9', '7', '6', '1', '4', '2', '3'},
                {'4', '2', '6', '8', '5', '3', '7', '9', '1'},
                {'7', '1', '3', '9', '2', '4', '8', '5', '6'},
                {'9', '6', '1', '5', '3', '7', '2', '8', '4'},
                {'2', '8', '7', '4', '1', '9', '6', '3', '5'},
                {'3', '4', '5', '2', '8', '6', '1', '7', '9'}
        };

        Assertions.assertArrayEquals(expected, board, "解出来的数独答案与预期不符。");
    }
}
